name: 'Set up common workflow requirements'
description: 'Do things'
inputs:
  git_checkout_fetch_depth:
    description: 'Fetch depth for git checkout'
    required: false
    default: '1'
  nodejs:
    description: 'Prepare environment for Node.js'
    required: false
    default: '0'
  php_version:
    description: 'PHP version to use'
    required: false
    default: '7.4'
  phpcs:
    description: 'Prepare environment for PHPCS'
    required: false
    default: '0'
  phpunit:
    description: 'Prepare environment for PHPUnit'
    required: false
    default: '0'
  ssh_key_encoded:
    description: 'base-64 encoded SSH key to install'
    required: true
runs:
  using: "composite"
  steps:
    # Universal needs

    - name: Prepare SSH key
      run: |
        echo 'INPUT_SSH_KEY_ENCODED<<EOF' >> $GITHUB_ENV
        echo "${{ inputs.ssh_key_encoded }}" >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
      shell: bash

    - name: Set up SSH
      run: ${{ github.action_path }}/scripts/set-up-ssh.sh
      shell: bash

    - name:  Add shared utilities
      run: ${{ github.action_path }}/scripts/add-shared-utilities.sh
      shell: bash

    - name: Check out repository
      uses: actions/checkout@v3
      with:
        fetch-depth: ${{ inputs.git_checkout_fetch_depth }}
        ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || '' }}

    - name: Set environment variables
      run: |
        # For back-compat reasons, this references Bitbucket. Once all repos are moved, we can update references to this.
        # Additionally, for "pull request" events, the `$GITHUB_REF_NAME` variable does not match the branch name.
        FULL_PATH_REF="${{ github.event.pull_request.head.ref || github.ref }}"
        REF=${FULL_PATH_REF#refs\/heads\/}
        echo "BITBUCKET_BRANCH=${REF}" >> $GITHUB_ENV

        echo "PMC_COMMIT_DIFF_FILE=${RUNNER_TEMP}/diff.txt" >> $GITHUB_ENV
        echo "PMC_DIFF_ONLY=${{ github.event_name == 'pull_request' }}" >> $GITHUB_ENV
        echo "PMC_SKIP_INIT_BUILD=true" >> $GITHUB_ENV
      shell: bash

    # Prepare for PHPCS or PHPUnit

    - name: Determine PHP coverage mode
      id: php-coverage-mode
      if: ${{ inputs.phpcs == '1' || inputs.phpunit == '1' }}
      run: |
        if [[ '${{ inputs.phpunit }}' == '1' ]]; then
          echo "::set-output name=mode::xdebug"
        else
          echo "::set-output name=mode::none"
        fi
      shell: bash

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      if: ${{ inputs.phpcs == '1' || inputs.phpunit == '1' }}
      with:
        php-version: ${{ inputs.php_version }}
        coverage: ${{ steps.php-coverage-mode.outputs.mode }}
        tools: composer:1

    - name: Log debug information
      if: ${{ inputs.phpcs == '1' || inputs.phpunit == '1' }}
      run: |
        php --version
        composer --version
      shell: bash

      # This date is used to ensure that caches are cleared weekly.
      # http://man7.org/linux/man-pages/man1/date.1.html
    - name: Get last Monday's date
      id: get-date
      if: ${{ inputs.phpcs == 1 || inputs.phpunit == 1 || inputs.nodejs == 1 }}
      run: echo "::set-output name=date::$(/bin/date -u --date='last Sun' "+%F")"
      shell: bash

    - name: Get composer global path
      id: composer-global-path
      if: ${{ inputs.phpcs == '1' || inputs.phpunit == '1' }}
      run: echo "::set-output name=path::$(composer config home)"
      shell: bash

    - name: Ensure composer global bin is in path
      id: composer-global-bin-path
      if: ${{ inputs.phpcs == '1' || inputs.phpunit == '1' }}
      run: echo "$(composer config home)/$(composer config bin-dir)" >> $GITHUB_PATH
      shell: bash

    - name: Cache global composer dependencies
      id: composer-cache-global
      if: ${{ inputs.phpcs == '1' || inputs.phpunit == '1' }}
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-global-path.outputs.path }}
        key: ${{ runner.os }}-date-${{ steps.get-date.outputs.date }}-php-${{ inputs.php_version }}-phpcs-${{ inputs.phpcs }}-phpunit-${{ inputs.phpunit }}-composer-global

    - name: Install diffFilter
      if: ${{ ( inputs.phpcs == '1' || inputs.phpunit == '1' ) && steps.composer-cache-global.outputs.cache-hit != 'true' }}
      run: composer global require exussum12/coverage-checker
      shell: bash

    # Prepare for PHPUnit

    - name: Install PHPUnit
      if: ${{ inputs.phpunit == '1' && steps.composer-cache-global.outputs.cache-hit != 'true' }}
      run: |
        if [[ $(php -v) =~ "PHP 8." ]]; then
          composer global require "phpunit/phpunit=9.*"
        elif [[ $(php -v) =~ "PHP 7." ]]; then
          composer global require "phpunit/phpunit=6.1.*"
        fi
        
        composer global require yoast/phpunit-polyfills
      shell: bash

    - name: Log PHPUnit debug information
      if: ${{ inputs.phpunit == '1' }}
      run: |
        phpunit --version
      shell: bash

    - name: Create plugin loader
      if: ${{ inputs.phpunit == '1' }}
      run: cp "${{ github.action_path }}/templates/plugin-loader.php" "${RUNNER_TEMP}"
      shell: bash

    # Prepare for Node.js

    - name: Set nvm-versions cache path
      id: set-nvm-cache-info
      if: ${{ inputs.nodejs == 1 }}
      run: echo "::set-output name=path::${NVM_DIR}/versions"
      shell: bash

    - name: Cache nvm versions
      id: cache-nvm-versions
      if: ${{ inputs.nodejs == 1 }}
      uses: actions/cache@v3
      with:
        path: ${{ steps.set-nvm-cache-info.outputs.path }}
        key: ${{ runner.os }}-nvm-versions-${{ steps.get-date.outputs.date }}
